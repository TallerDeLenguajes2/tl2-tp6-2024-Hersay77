@model List<Producto>

<div class="text-center container-fluid">
    <h2 class="display-6 text-primary text-uppercase border-bottom border-3 pb-2">Lista de Productos</h2>
    <table class="table table-bordered table-striped ">
        <thead>
            <tr>
                <th>Descripción</th>
                <th>Precio</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var producto in Model)
            {
                <tr>
                    <td>@producto.Descripcion</td>
                    <td>@producto.Precio.ToString("C")</td> <!--La opción "C" en el método ToString es un formato estándar que aplica automáticamente el símbolo de moneda y dos decimales al valor. Esto es útil cuando deseas mostrar precios de manera profesional y consistente con la moneda local.
    Por ejemplo, si Precio tiene el valor 1000, esta línea mostrará $1,000.00-->
                    <td>
                        <a asp-controller="Productos" asp-action="Modificar" asp-route-id="@producto.IdProducto"
                            class="btn btn-warning">Modificar</a>
                        <a asp-controller="Productos" asp-action="Eliminar" asp-route-id="@producto.IdProducto"
                            class="btn btn-danger">Eliminar</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<div class="text-center">
    <a asp-controller="Productos" asp-action="Crear" class="btn btn-success">Crear producto</a> <!--Llama al metodo Productos/Crear Get que no recibe un producto símbolo --Llama a la vista CrearProducto donde esta el formulario el cual llama a Productos/CrearProudcto POST que si recibe un producto con formulario que   llama al repositorio el cual guarda en la base de datos-->
</div>
